{
    "info": {
        "_postman_id": "20b90297-5cfa-4c4f-951b-ca9d798b23a4",
        "name": "CTK-Customer_Bill-4.0",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "N1",
            "item": [
                {
                    "name": "/CustomerBill",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "2021de75-5b79-477b-aef0-3c48a78ae5e8",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "",
                                    "var Ajv = require('ajv'),",
                                    "  ajv = new Ajv({ logger: console });",
                                    "var schema = {",
                                    "  \"$schema\": \"http://json-schema.org/schema#\",",
                                    "  \"type\": \"object\",",
                                    "  \"anyOf\": [{",
                                    "    \"properties\": {",
                                    "      \"billDocument\": {",
                                    "        \"type\": \"array\",",
                                    "        \"items\": {",
                                    "          \"type\": \"object\",",
                                    "          \"properties\": {",
                                    "            \"id\": {",
                                    "              \"type\": \"string\"",
                                    "            }",
                                    "          },",
                                    "          \"required\": [\"id\"]",
                                    "        }",
                                    "      },",
                                    "      \"billingAccount\": {",
                                    "        \"type\": \"object\",",
                                    "        \"properties\": {",
                                    "          \"id\": {",
                                    "            \"type\": \"string\"",
                                    "          }",
                                    "        },",
                                    "        \"required\": [\"id\"]",
                                    "      }",
                                    "    },",
                                    "    \"required\": [\"billDocument\", \"billingAccount\"]",
                                    "  },",
                                    "  {",
                                    "    \"properties\": {",
                                    "      \"billDocument\": {",
                                    "        \"type\": \"array\",",
                                    "        \"items\": {",
                                    "          \"type\": \"object\",",
                                    "          \"properties\": {",
                                    "            \"id\": {",
                                    "              \"type\": \"string\"",
                                    "            }",
                                    "          },",
                                    "          \"required\": [\"id\"]",
                                    "        }",
                                    "      },",
                                    "      \"financialAccount\": {",
                                    "        \"type\": \"object\",",
                                    "        \"properties\": {",
                                    "          \"id\": {",
                                    "            \"type\": \"string\"",
                                    "          }",
                                    "        },",
                                    "        \"required\": [\"id\"]",
                                    "      }",
                                    "    },",
                                    "    \"required\": [\"billDocument\", \"financialAccount\"]",
                                    "  }",
                                    "  ]",
                                    "};",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "    var requiredAttributes = ['href', 'id', 'billDocument'];",
                                    "",
                                    "    pm.globals.set('HREFCB01', instance['href']);",
                                    "    pm.globals.set('IDCB01', instance['id']);",
                                    "    pm.globals.set('BDID01', instance['billDocument'][0]['id']);",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has billDocument attribute', function () { pm.expect(instance[\"billDocument\"]).to.be.a('array'); });",
                                    "    pm.test('Response has billDocument.id attribute', function () { pm.expect(instance[\"billDocument\"][0]['id']).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on billDocument.id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['billDocument'][0]['id']);",
                                    "    });",
                                    "",
                                    "",
                                    "    var validate = ajv.compile(schema)",
                                    "    var valid = validate(instance);",
                                    "    if (!valid) {",
                                    "      console.log(validate.errors);",
                                    "      validate.errors.forEach(er => {",
                                    "        pm.test(JSON.stringify(er), function () {",
                                    "          pm.expect(false).to.be.true;",
                                    "        });",
                                    "      })",
                                    "    }",
                                    "    pm.test('Response valid against schema', function () {",
                                    "      pm.expect(valid).to.be.true;",
                                    "    });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "  var requiredAttributes = ['href', 'id', 'billDocument'];",
                                    "",
                                    "  pm.globals.set('HREFCB01', instance['href']);",
                                    "  pm.globals.set('IDCB01', instance['id']);",
                                    "  pm.globals.set('BDID01', instance['billDocument'][0]['id']);",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "  pm.test('Response has billDocument attribute', function () { pm.expect(instance[\"billDocument\"]).to.be.a('array'); });",
                                    "  pm.test('Response has billDocument.id attribute', function () { pm.expect(instance[\"billDocument\"][0]['id']).to.be.a('string'); });",
                                    "",
                                    "  pm.test('Body includes value held on href', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "  });",
                                    "  pm.test('Body includes value held on id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "  });",
                                    "  pm.test('Body includes value held on billDocument.id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['billDocument'][0]['id']);",
                                    "  });",
                                    "  pm.test('Schema is valid', function () {",
                                    "    pm.expect(ajv.validate(schema, pm.response.json())).to.be.true;",
                                    "  });",
                                    "  var validate = ajv.compile(schema)",
                                    "  var valid = validate(instance);",
                                    "  if (!valid) {",
                                    "    console.log(validate.errors);",
                                    "    validate.errors.forEach(er => {",
                                    "      pm.test(JSON.stringify(er), function () {",
                                    "        pm.expect(false).to.be.true;",
                                    "      });",
                                    "    })",
                                    "  }",
                                    "  pm.test('Response valid against schema', function () {",
                                    "    pm.expect(valid).to.be.true;",
                                    "  });",
                                    "}",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ]
                        },
                        "description": "This operation retrieves a CustomerBill"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N2",
            "item": [
                {
                    "name": "/CustomerBill?fields=href",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "2c3b7510-2df9-4cb1-ba28-b1634772a03e",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "",
                                    "  var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill?fields=href",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "href"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBill"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBill?fields=id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "cca9ecb7-eec0-4038-b63a-f0e206ab1232",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "",
                                    "  var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill?fields=id",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBill"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBill?id={{IDCB01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e41f9735-be7b-4dd6-ab0c-6ac07e3cc72b",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id', 'billDocument'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has billDocument attribute', function () { pm.expect(instance[\"billDocument\"]).to.be.a('array'); });",
                                    "        pm.test('Response has billDocument.id attribute', function () { pm.expect(instance[\"billDocument\"][0]['id']).to.be.a('string'); });",
                                    "        ",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        pm.test('Body includes value held on billDocument.id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['billDocument'][0]['id']);",
                                    "        });",
                                    "        ",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDCB01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFCB01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCB01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDCB01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCB01'); });",
                                    "            pm.test('billDocument.id is ' + pm.globals.get(\"BDID01\"), function () { pm.expect(instance['billDocument'][0]['id']) == pm.globals.get('BDID01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDCB02\")) {",
                                    "            pm.test('HREFCB02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id', 'billDocument'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has billDocument attribute', function () { pm.expect(instance[\"billDocument\"]).to.be.a('array'); });",
                                    "    pm.test('Response has billDocument.id attribute', function () { pm.expect(instance[\"billDocument\"][0]['id']).to.be.a('string'); });",
                                    "    ",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on billDocument.id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['billDocument'][0]['id']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDCB01\")) {",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFCB01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCB01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDCB01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCB01'); });",
                                    "        pm.test('billDocument.id is ' + pm.globals.get(\"BDID01\"), function () { pm.expect(instance['billDocument'][0]['id']) == pm.globals.get('BDID01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDCB02\")) {",
                                    "        pm.test('HREFCB02 not expected on this test', function () {",
                                    "            console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "        });",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill?id={{IDCB01}}",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ],
                            "query": [
                                {
                                    "key": "id",
                                    "value": "{{IDCB01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBill"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBill",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "acdf36b4-28cb-4d37-9ab1-a68087838004",
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData)) { ",
                                    "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                                    "}",
                                    "",
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var instance = pm.response.json();",
                                    "var requiredAttributes = ['href', 'id', 'billDocument', 'state'];",
                                    "",
                                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "pm.test('Response has billDocument attribute', function() { pm.expect(instance[\"billDocument\"]).to.be.a('array'); });",
                                    "pm.test('Response has state attribute', function() { pm.expect(instance[\"state\"]).to.be.a('string'); });",
                                    "",
                                    "",
                                    "pm.test('Body includes value held on state', function () {",
                                    "  pm.expect(pm.response.text()).to.include(instance['state']);",
                                    "});",
                                    "pm.test('state is onHold'), function () { pm.expect(instance['state']) == 'onHold' };"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\"state\": \"onHold\"\n}"
                        },
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill/{{IDCB01}}",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ],
                            "path": [
                                "{{IDCB01}}"
                            ]
                        },
                        "description": "This operation creates a CustomerBillOnDemand"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "E1",
            "item": [
                {
                    "name": "/CustomerBill/404ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "dd020d75-1f53-48e4-b5fb-6c0ba7687f82",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBill/814738f6-4059-4a95-8d34-e859dce29b7c",
                            "host": [
                                "{{Customer_Bill}}customerBill"
                            ],
                            "path": [
                                "814738f6-4059-4a95-8d34-e859dce29b7c"
                            ]
                        },
                        "description": "This operation search for one of the created CustomerBill"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N1",
            "item": [
                {
                    "name": "/CustomerBillOnDemand",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ff7b3acd-de96-44c8-9a87-7ae9b131a19c",
                                "exec": [
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "",
                                    "var Ajv = require('ajv'),",
                                    "  ajv = new Ajv({ logger: console });",
                                    "var schema = {",
                                    "  \"$schema\": \"http://json-schema.org/schema#\",",
                                    "  \"type\": \"object\",",
                                    "  \"anyOf\": [{",
                                    "    \"properties\": {",
                                    "      \"billingAccount\": {",
                                    "        \"type\": \"object\",",
                                    "        \"properties\": {",
                                    "          \"id\": {",
                                    "            \"type\": \"string\"",
                                    "          }",
                                    "        },",
                                    "        \"required\": [\"id\"]",
                                    "      }",
                                    "    },",
                                    "    \"required\": [\"billingAccount\"]",
                                    "  },",
                                    "  {",
                                    "    \"properties\": {",
                                    "      \"relatedParty\": {",
                                    "        \"type\": \"object\",",
                                    "        \"properties\": {",
                                    "          \"id\": {",
                                    "            \"type\": \"string\"",
                                    "          },",
                                    "          \"@referredType\": {",
                                    "            \"type\": \"string\"",
                                    "          }",
                                    "        },",
                                    "        \"required\": [\"@referredType\", \"id\"]",
                                    "      }",
                                    "    },",
                                    "    \"required\": [\"relatedParty\"]",
                                    "  }",
                                    "  ]",
                                    "};",
                                    "",
                                    "",
                                    "if (Array.isArray(jsonData)) {",
                                    "  pm.test('Array not expected as response', function () { pm.expect.fail() });",
                                    "}",
                                    "",
                                    "pm.test(\"Status code is 201\", function () {",
                                    "  pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "var instance = pm.response.json();",
                                    "var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "pm.globals.set('HREFCBOD01', instance['href']);",
                                    "pm.globals.set('IDCBOD01', instance['id']);",
                                    "",
                                    "pm.test('Body includes value held on href', function () {",
                                    "  pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "});",
                                    "pm.test('Body includes value held on id', function () {",
                                    "  pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "});",
                                    "",
                                    "var validate = ajv.compile(schema)",
                                    "var valid = validate(instance);",
                                    "if (!valid) {",
                                    "  console.log(validate.errors);",
                                    "  validate.errors.forEach(er => {",
                                    "    pm.test(JSON.stringify(er), function () {",
                                    "      pm.expect(false).to.be.true;",
                                    "    });",
                                    "  })",
                                    "}",
                                    "pm.test('Response valid against schema', function () {",
                                    "  pm.expect(valid).to.be.true;",
                                    "});",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"billingAccount\": {\n        \"id\": \"A0815\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ]
                        },
                        "description": "This operation creates a CustomerBillOnDemand"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBillOnDemand",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "79665d5f-63fd-4b52-be63-0e1d38ed5534",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "",
                                    "",
                                    "",
                                    "var Ajv = require('ajv'),",
                                    "    ajv = new Ajv({ logger: console });",
                                    "var schema = {",
                                    "    \"$schema\": \"http://json-schema.org/schema#\",",
                                    "    \"type\": \"object\",",
                                    "    \"anyOf\": [{",
                                    "        \"properties\": {",
                                    "            \"billingAccount\": {",
                                    "                \"type\": \"object\",",
                                    "                \"properties\": {",
                                    "                    \"id\": {",
                                    "                        \"type\": \"string\"",
                                    "                    }",
                                    "                },",
                                    "                \"required\": [\"id\"]",
                                    "            }",
                                    "        },",
                                    "        \"required\": [\"billingAccount\"]",
                                    "    },",
                                    "    {",
                                    "        \"properties\": {",
                                    "            \"relatedParty\": {",
                                    "                \"type\": \"object\",",
                                    "                \"properties\": {",
                                    "                    \"id\": {",
                                    "                        \"type\": \"string\"",
                                    "                    },",
                                    "                    \"@referredType\": {",
                                    "                        \"type\": \"string\"",
                                    "                    }",
                                    "                },",
                                    "                \"required\": [\"@referredType\", \"id\"]",
                                    "            }",
                                    "        },",
                                    "        \"required\": [\"relatedParty\"]",
                                    "    }",
                                    "    ]",
                                    "};",
                                    "",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFCBOD02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD02'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDCBOD02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD02'); });",
                                    "        }",
                                    "        var validate = ajv.compile(schema)",
                                    "        var valid = validate(instance);",
                                    "        if (!valid) {",
                                    "            console.log(validate.errors);",
                                    "            validate.errors.forEach(er => {",
                                    "                pm.test(JSON.stringify(er), function () {",
                                    "                    pm.expect(false).to.be.true;",
                                    "                });",
                                    "            })",
                                    "        }",
                                    "        pm.test('Response valid against schema', function () {",
                                    "            pm.expect(valid).to.be.true;",
                                    "        });",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFCBOD02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD02'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDCBOD02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD02'); });",
                                    "    }",
                                    "    var validate = ajv.compile(schema)",
                                    "    var valid = validate(instance);",
                                    "    if (!valid) {",
                                    "        console.log(validate.errors);",
                                    "        validate.errors.forEach(er => {",
                                    "            pm.test(JSON.stringify(er), function () {",
                                    "                pm.expect(false).to.be.true;",
                                    "            });",
                                    "        })",
                                    "    }",
                                    "    pm.test('Response valid against schema', function () {",
                                    "        pm.expect(valid).to.be.true;",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ]
                        },
                        "description": "This operation search for the created CustomerBillOnDemand"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBillOnDemand/{{IDCBOD01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c3638d6b-6cfc-4d9c-a5f4-d3070a6a0b02",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "            pm.test('IDCBOD02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "        pm.test('IDCBOD02 not expected on this test', function () {",
                                    "            console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "        });",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand/{{IDCBOD01}}",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ],
                            "path": [
                                "{{IDCBOD01}}"
                            ]
                        },
                        "description": "This operation search for one of the created CustomerBillOnDemand"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N2",
            "item": [
                {
                    "name": "/CustomerBillOnDemand?fields=href",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "05ec16b6-4198-451c-8442-53cb11860476",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand?fields=href",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "href"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBillOnDemand"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBillOnDemand?fields=id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d68069e6-42e8-453e-9679-debdc7868a08",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand?fields=id",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBillOnDemand"
                    },
                    "response": []
                },
                {
                    "name": "/CustomerBillOnDemand?id={{IDCBOD01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "b47de0db-77a7-4af6-8f8e-ac8bccc5859b",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "            pm.test('IDCBOD02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['href', 'id'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD01\")) {",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFCBOD01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFCBOD01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDCBOD01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDCBOD01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDCBOD02\")) {",
                                    "        pm.test('IDCBOD02 not expected on this test', function () {",
                                    "            console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "        });",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand?id={{IDCBOD01}}",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ],
                            "query": [
                                {
                                    "key": "id",
                                    "value": "{{IDCBOD01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a CustomerBillOnDemand"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "E1",
            "item": [
                {
                    "name": "/CustomerBillOnDemand/404ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e1c88871-7f92-42f0-9d8a-5a14f9a642ff",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}customerBillOnDemand/0e34c2dd-fd61-4ca3-a42b-c3a64f3c398b",
                            "host": [
                                "{{Customer_Bill}}customerBillOnDemand"
                            ],
                            "path": [
                                "0e34c2dd-fd61-4ca3-a42b-c3a64f3c398b"
                            ]
                        },
                        "description": "This operation search for one of the created CustomerBillOnDemand"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N1",
            "item": [
                {
                    "name": "/AppliedCustomerBillingRate",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "67d0cba7-45df-4de8-8467-5adb56dffacb",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "    pm.globals.set('ISBILLEDACBR01', instance['isBilled']);",
                                    "    var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "    ",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on isBilled', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "  var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "  pm.globals.set('ISBILLEDACBR01', instance['isBilled']);",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "  pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "  pm.test('Body includes value held on id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "  });",
                                    "",
                                    "  pm.test('Body includes value held on isBilled', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "  });",
                                    "  pm.test('Body includes value held on href', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "  });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ]
                        },
                        "description": "This operation retrieves a AppliedCustomerBillingRate"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "N2",
            "item": [
                {
                    "name": "/AppliedCustomerBillingRate?fields=id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "08a2f1dd-e7be-457d-b518-3113006ca84f",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "    var requiredAttributes = ['id', 'href'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.globals.set('HREFACBR01', instance['href']);",
                                    "    pm.globals.set('IDACBR01', instance['id']);",
                                    "    ",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "  var requiredAttributes = ['id', 'href'];",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "  pm.globals.set('HREFACBR01', instance['href']);",
                                    "  pm.globals.set('IDACBR01', instance['id']);",
                                    "",
                                    "  pm.test('Body includes value held on id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "  });",
                                    "  pm.test('Body includes value held on href', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "  });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate?fields=id",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "This operation filter a AppliedCustomerBillingRate"
                    },
                    "response": []
                },
                {
                    "name": "/AppliedCustomerBillingRate?id={{IDACBR01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "f1146363-fe08-42a3-9982-168b36ce5f66",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        pm.test('Body includes value held on isBilled', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "        });",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDACBR01\")) {",
                                    "            pm.test('isBilled is ' + pm.globals.get(\"ISBILLEDACBR01\"), function () { pm.expect(instance['isBilled']) == pm.globals.get('ISBILLEDACBR01'); });",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFACBR01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFACBR01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDACBR01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDACBR01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDACBR02\")) {",
                                    "            pm.test('IDACBR02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on isBilled', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDACBR01\")) {",
                                    "        pm.test('isBilled is ' + pm.globals.get(\"ISBILLEDACBR01\"), function () { pm.expect(instance['isBilled']) == pm.globals.get('ISBILLEDACBR01'); });",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFACBR01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFACBR01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDACBR01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDACBR01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDACBR02\")) {",
                                    "        pm.test('IDACBR02 not expected on this test', function () {",
                                    "            console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "        });",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate?id={{IDACBR01}}",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "query": [
                                {
                                    "key": "id",
                                    "value": "{{IDACBR01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a AppliedCustomerBillingRate"
                    },
                    "response": []
                },
                {
                    "name": "/AppliedCustomerBillingRate?fields=isBilled",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "edd91a3b-2578-460a-b21f-35a99da4215b",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "    var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on isBilled', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "  var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "  pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "  pm.test('Body includes value held on id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "  });",
                                    "  pm.test('Body includes value held on isBilled', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "  });",
                                    "  pm.test('Body includes value held on href', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "  });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate?fields=isBilled",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "isBilled"
                                }
                            ]
                        },
                        "description": "This operation filter a AppliedCustomerBillingRate"
                    },
                    "response": []
                },
                {
                    "name": "/AppliedCustomerBillingRate?isBilled={{ISBILLEDACBR01}}",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "21c6e403-b8ed-4037-b850-bdc94b152d46",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "    jsonData.forEach(function (instance, index) {",
                                    "",
                                    "        var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "        pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "        pm.test('Body includes value held on id', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "        });",
                                    "        pm.test('Body includes value held on isBilled', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "        });",
                                    "        pm.test('Body includes value held on href', function () {",
                                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "        });",
                                    "        // Individualized tests",
                                    "        if (instance.id == pm.globals.get(\"IDACBR01\")) {",
                                    "            pm.test('isBilled is ' + pm.globals.get(\"ISBILLEDACBR01\"), function () { pm.expect(instance['isBilled']) == pm.globals.get('ISBILLEDACBR01'); });",
                                    "            pm.test('href is ' + pm.globals.get(\"HREFACBR01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFACBR01'); });",
                                    "            pm.test('id is ' + pm.globals.get(\"IDACBR01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDACBR01'); });",
                                    "        }",
                                    "        if (instance.id == pm.globals.get(\"IDACBR02\")) {",
                                    "            pm.test('IDACBR02 not expected on this test', function () {",
                                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "            });",
                                    "        }",
                                    "",
                                    "    });",
                                    "}",
                                    "else {",
                                    "    var instance = pm.response.json();",
                                    "    var requiredAttributes = ['id', 'isBilled', 'href'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has isBilled attribute', function () { pm.expect(instance[\"isBilled\"]).to.be.a('boolean'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on isBilled', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['isBilled']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "        pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "    // Individualized tests",
                                    "    if (instance.id == pm.globals.get(\"IDACBR01\")) {",
                                    "        pm.test('isBilled is ' + pm.globals.get(\"ISBILLEDACBR01\"), function () { pm.expect(instance['isBilled']) == pm.globals.get('ISBILLEDACBR01'); });",
                                    "        pm.test('href is ' + pm.globals.get(\"HREFACBR01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFACBR01'); });",
                                    "        pm.test('id is ' + pm.globals.get(\"IDACBR01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDACBR01'); });",
                                    "    }",
                                    "    if (instance.id == pm.globals.get(\"IDACBR02\")) {",
                                    "        pm.test('IDACBR02 not expected on this test', function () {",
                                    "            console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                                    "        });",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate?isBilled={{ISBILLEDACBR01}}",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "query": [
                                {
                                    "key": "isBilled",
                                    "value": "{{ISBILLEDACBR01}}"
                                }
                            ]
                        },
                        "description": "This operation filter a AppliedCustomerBillingRate"
                    },
                    "response": []
                },
                {
                    "name": "/AppliedCustomerBillingRate?fields=href",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bd7aaa9c-a3cf-4644-820e-9865a2382db3",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "  pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "var jsonData = pm.response.json();",
                                    "",
                                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                                    "  jsonData.forEach(function (instance, index) {",
                                    "    var requiredAttributes = ['id', 'href'];",
                                    "",
                                    "    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "    pm.globals.set('HREFACBR01', instance['href']);",
                                    "    pm.globals.set('IDACBR01', instance['id']);",
                                    "",
                                    "    pm.test('Body includes value held on id', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "    });",
                                    "    pm.test('Body includes value held on href', function () {",
                                    "      pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "    });",
                                    "  });",
                                    "}",
                                    "else {",
                                    "  var instance = pm.response.json();",
                                    "  var requiredAttributes = ['id', 'href'];",
                                    "",
                                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                                    "",
                                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                                    "",
                                    "  pm.globals.set('HREFACBR01', instance['href']);",
                                    "  pm.globals.set('IDACBR01', instance['id']);",
                                    "",
                                    "  pm.test('Body includes value held on id', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                                    "  });",
                                    "  pm.test('Body includes value held on href', function () {",
                                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                                    "  });",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate?fields=href",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "query": [
                                {
                                    "key": "fields",
                                    "value": "href"
                                }
                            ]
                        },
                        "description": "This operation filter a AppliedCustomerBillingRate"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "E1",
            "item": [
                {
                    "name": "/AppliedCustomerBillingRate/404ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "141d7e0b-275c-4573-a49c-97a568d16e17",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{Customer_Bill}}appliedCustomerBillingRate/2fe07e00-e489-4bc5-96f7-08a980a63452",
                            "host": [
                                "{{Customer_Bill}}appliedCustomerBillingRate"
                            ],
                            "path": [
                                "2fe07e00-e489-4bc5-96f7-08a980a63452"
                            ]
                        },
                        "description": "This operation search for one of the created AppliedCustomerBillingRate"
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        }
    ],
    "protocolProfileBehavior": {}
}